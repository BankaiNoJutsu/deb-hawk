Description: Upstream changes introduced in version 0.3.5-0dizopsin1
 This patch has been created by dpkg-source during the package build.
 Here's the last changelog entry, hopefully it gives details on why
 those changes were made:
 .
 hawk (0.3.5-0dizopsin1) stable; urgency=low
 .
   * Initial release
 .
 The person named in the Author field signed this changelog entry.
Author: Joerg Sauer <debian@dizopsin.net>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: http://bugs.debian.org/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- hawk-0.3.5.orig/Makefile
+++ hawk-0.3.5/Makefile
@@ -49,7 +49,7 @@ RPM_OPTS = --define "_sourcedir $(RPM_RO
 
 # Override this when invoking make to install elsewhere, e.g.:
 #   make WWW_BASE=/var/www install
-WWW_BASE = /srv/www
+WWW_BASE = /usr/share
 
 # Override this to get a different init script (e.g. "redhat")
 INIT_STYLE = suse
@@ -70,25 +70,37 @@ clean:
 	rm -rf hawk/tmp
 	rm -rf hawk/log
 	rm -f hawk/config/lighttpd.conf
+	rm -f tools/hawk_chkpwd
 	rm -f scripts/hawk.{suse,redhat}
 
 install:
-	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/log
+	patch hawk/vendor/gems/locale_rails-2.0.5/lib/locale_rails/i18n.rb < patches/i18n.rb.patch
+	mkdir -p $(DESTDIR)/var/log/hawk
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp
+	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/log
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/locale
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp/cache
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp/pids
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp/sessions
 	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp/sockets
+	mkdir -p $(DESTDIR)$(WWW_BASE)/hawk/tmp/home
 	# Get rid of cruft from packed gems
 	-find hawk/vendor -name '*bak' -o -name '*~' -o -name '#*#' | xargs rm
+	install -D -m 0644 hawk/config/lighttpd.conf $(DESTDIR)/etc/hawk.conf
 	cp -a hawk/* $(DESTDIR)$(WWW_BASE)/hawk
-	rm $(DESTDIR)$(WWW_BASE)/hawk/config/lighttpd.conf.in
-	-chown -R hacluster.haclient $(DESTDIR)$(WWW_BASE)/hawk
-	install -D -m 0755 scripts/hawk.$(INIT_STYLE) $(DESTDIR)/etc/init.d/hawk
-	install -D -m 4750 tools/hawk_chkpwd $(DESTDIR)/usr/sbin/hawk_chkpwd
+	rm $(DESTDIR)$(WWW_BASE)/hawk/config/lighttpd.conf*
+	-chown -R root.root $(DESTDIR)$(WWW_BASE)/hawk
+	-chown -R root.haclient $(DESTDIR)/var/log/hawk
+	-chmod 2775 $(DESTDIR)/var/log/hawk
+	-chown -R root.haclient $(DESTDIR)$(WWW_BASE)/hawk/log
+	-chmod -R 2775 $(DESTDIR)$(WWW_BASE)/hawk/log
+	-chown -R root.haclient $(DESTDIR)$(WWW_BASE)/hawk/tmp
+	-chmod -R 2775 $(DESTDIR)$(WWW_BASE)/hawk/tmp
+	# install -D -m 0755 scripts/hawk.$(INIT_STYLE) $(DESTDIR)/etc/init.d/hawk
+	install -D -m 4754 tools/hawk_chkpwd $(DESTDIR)/usr/sbin/hawk_chkpwd
 	-chown root.haclient $(DESTDIR)/usr/sbin/hawk_chkpwd
+	rm $(DESTDIR)$(WWW_BASE)/hawk/log/development.log
 
 # Make a tar.bz2 named for the most recent human-readable tag
 archive:
--- hawk-0.3.5.orig/hawk/config/lighttpd.conf.in
+++ hawk-0.3.5/hawk/config/lighttpd.conf.in
@@ -128,8 +128,8 @@ server.modules           = ( "mod_rewrit
 server.error-handler-404 = "/dispatch.fcgi"
 server.document-root     = "@WWW_BASE@/hawk/public/"
 
-server.errorlog          = "@WWW_BASE@/hawk/log/lighttpd.error.log"
-accesslog.filename       = "@WWW_BASE@/hawk/log/lighttpd.access.log"
+server.errorlog          = "/var/log/hawk/lighttpd.error.log"
+accesslog.filename       = "/var/log/hawk/lighttpd.access.log"
 
 # if this is in, it seems to break /rails/info/properties
 #url.rewrite              = ( "^/$" => "index.html", "^([^.]+)$" => "$1.html" )
--- /dev/null
+++ hawk-0.3.5/patches/i18n.rb.patch
@@ -0,0 +1,56 @@
+--- /var/lib/gems/1.8/gems/locale_rails-2.0.5/lib/locale_rails/i18n.rb	2011-08-21 18:20:19.659786116 +0200
++++ /usr/share/hawk/vendor/gems/locale_rails-2.0.5/lib/locale_rails/i18n.rb	2011-08-21 20:31:47.459796840 +0200
+@@ -13,35 +13,35 @@
+ 
+   # Gets the supported locales.
+   def supported_locales 
+-    Locale.app_language_tags
++    ::Locale.app_language_tags
+   end
+ 
+   # Sets the supported locales.
+   #  I18n.set_supported_locales("ja-JP", "ko-KR", ...)
+   def set_supported_locales(*tags)
+-    Locale.set_app_language_tags(*tags)
++    ::Locale.set_app_language_tags(*tags)
+   end
+ 
+   # Sets the supported locales as an Array.
+   #  I18n.supported_locales = ["ja-JP", "ko-KR", ...]
+   def supported_locales=(tags)
+-    Locale.set_app_language_tags(*tags)
++    ::Locale.set_app_language_tags(*tags)
+   end
+ 
+-  # Sets the locale.
++  # Sets the ::Locale.
+   #  I18n.locale = "ja-JP"
+   def locale=(tag)
+-    Locale.clear
++    ::Locale.clear
+     tag = Locale::Tag::Rfc.parse(tag.to_s) if tag.kind_of? Symbol
+-    Locale.current = tag
+-    Thread.current[:locale] = Locale.candidates(:type => :rfc)[0]
++    ::Locale.current = tag
++    Thread.current[:locale] = ::Locale.candidates(:type => :rfc)[0]
+   end
+ 
+   # Sets the default locale.
+-  #  I18n.default_locale = "ja"
++  #  I18n.default_::Locale = "ja"
+   def default_locale=(tag)
+     tag = Locale::Tag::Rfc.parse(tag.to_s) if tag.kind_of? Symbol
+-    Locale.default = tag
++    ::Locale.default = tag
+     @@default_locale = tag
+   end
+   
+@@ -50,7 +50,7 @@
+     # MissingTranslationData is overrided to fallback messages in candidate locales.
+     def locale_rails_exception_handler(exception, locale, key, options) #:nodoc:
+       ret = nil
+-      Locale.candidates(:type => :rfc).each do |loc|
++      ::Locale.candidates(:type => :rfc).each do |loc|
+         begin
+           ret = backend.translate(loc, key, options)
+           break
--- /dev/null
+++ hawk-0.3.5/scripts/hawk.suse
@@ -0,0 +1,242 @@
+#!/bin/sh
+#
+#     SUSE system startup script for hawk
+#     Copyright (C) 1995--2005  Kurt Garloff, SUSE / Novell Inc.
+#     Copyright (C) 2009  Tim Serong, SUSE / Novell Inc.
+#          
+#     This library is free software; you can redistribute it and/or modify it
+#     under the terms of the GNU Lesser General Public License as published by
+#     the Free Software Foundation; either version 2.1 of the License, or (at
+#     your option) any later version.
+#			      
+#     This library is distributed in the hope that it will be useful, but
+#     WITHOUT ANY WARRANTY; without even the implied warranty of
+#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+#     Lesser General Public License for more details.
+#      
+#     You should have received a copy of the GNU Lesser General Public
+#     License along with this library; if not, write to the Free Software
+#     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307,
+#     USA.
+#
+# /etc/init.d/hawk
+#   and its symbolic link
+# /(usr/)sbin/rchawk
+#
+# System startup script for hawk
+#
+# LSB compatible service control script; see http://www.linuxbase.org/spec/
+# 
+# Note: This template uses functions rc_XXX defined in /etc/rc.status on
+# UnitedLinux/SUSE/Novell based Linux distributions. If you want to base your
+# script on this template and ensure that it works on non UL based LSB 
+# compliant Linux distributions, you either have to provide the rc.status
+# functions from UL or change the script to work without them.
+# See skeleton.compat for a template that works with other distros as well.
+#
+### BEGIN INIT INFO
+# Provides:          hawk
+# Required-Start:    $syslog $remote_fs
+# Should-Start:      $time
+# Required-Stop:     $syslog $remote_fs
+# Should-Stop:       $time
+# Default-Start:     3 5
+# Default-Stop:      0 1 2 6
+# Short-Description: hawk daemon providing web GUI for Pacemaker HA clusters
+# Description:       Start hawk to provide a web GUI for the Pacemaker
+#	High-Availability cluster resource manager.
+### END INIT INFO
+
+
+# Check for missing binaries (stale symlinks should not happen)
+# Note: Special treatment of stop for LSB conformance
+LIGHTTPD_BIN=/usr/sbin/lighttpd
+test -x $LIGHTTPD_BIN || { echo "$LIGHTTPD_BIN not installed"; 
+	if [ "$1" = "stop" ]; then exit 0;
+	else exit 5; fi; }
+
+# Check for existence of needed config file and read it
+LIGHTTPD_CONFIG=/srv/www/hawk/config/lighttpd.conf
+test -r $LIGHTTPD_CONFIG || { echo "$LIGHTTPD_CONFIG does not exist";
+	if [ "$1" = "stop" ]; then exit 0;
+	else exit 6; fi; }
+
+PID_FILE=/var/run/hawk.pid
+
+# Generate a self-signed SSL certificate if necessary.  Will not
+# generate certificate if one already exists, so administrator can
+# install a "real" certificate by simply replacing the generated
+# (combined) one at /etc/lighttpd/certs/hawk-combined.pem
+# NOTE: This is essentially a heavily stripped-back shell version
+# of the more generic check-create-certificate.pl script from WebYaST.
+# If this latter script becomes generally available, we should prefer
+# using it over this little function here.
+generate_ssl_cert() {
+	openssl_bin=/usr/bin/openssl
+	c_rehash_bin=/usr/bin/c_rehash
+	cert_file=/etc/lighttpd/certs/hawk.pem
+	cert_key_file=/etc/lighttpd/certs/hawk.key
+	combined_cert_file=/etc/lighttpd/certs/hawk-combined.pem
+	log_file=/srv/www/hawk/log/certificate.log
+	[ -e "$combined_cert_file" ] && return 0
+
+	echo "No certificate found. Creating one now."
+	mkdir -p $(dirname $combined_cert_file)
+
+	old_mask=$(umask)
+	umask 177
+	CN=$(hostname -f)
+	[ -z "$CN" ] && CN=$(hostname)
+	[ -z "$CN" ] && CN=localhost
+	$openssl_bin req -newkey rsa:2048 -x509 -nodes -days 1095 -batch -config /dev/fd/0 -out $cert_file -keyout $cert_key_file >$log_file 2>&1 <<CONF
+[req]
+distinguished_name = user_dn
+prompt = no
+[user_dn]
+commonName=$CN
+emailAddress=root@$CN
+organizationName=HA Web Konsole
+organizationalUnitName=Automatically Generated Certificate
+CONF
+	rc=$?
+	if [ $rc -eq 0 ]; then
+		cat $cert_key_file $cert_file > $combined_cert_file
+		[ -x "$c_rehash_bin" ] && $c_rehash_bin $(dirname $combined_cert_file) >/dev/null 2>&1
+	else
+		echo "Could not generate certificate.  Please see $log_file for details"
+	fi
+	umask $old_mask
+	return $rc
+}
+
+# Source LSB init functions
+# providing start_daemon, killproc, pidofproc, 
+# log_success_msg, log_failure_msg and log_warning_msg.
+# This is currently not used by UnitedLinux based distributions and
+# not needed for init scripts for UnitedLinux only. If it is used,
+# the functions from rc.status should not be sourced or used.
+#. /lib/lsb/init-functions
+
+# Shell functions sourced from /etc/rc.status:
+#      rc_check         check and set local and overall rc status
+#      rc_status        check and set local and overall rc status
+#      rc_status -v     be verbose in local rc status and clear it afterwards
+#      rc_status -v -r  ditto and clear both the local and overall rc status
+#      rc_status -s     display "skipped" and exit with status 3
+#      rc_status -u     display "unused" and exit with status 3
+#      rc_failed        set local and overall rc status to failed
+#      rc_failed <num>  set local and overall rc status to <num>
+#      rc_reset         clear both the local and overall rc status
+#      rc_exit          exit appropriate to overall rc status
+#      rc_active        checks whether a service is activated by symlinks
+. /etc/rc.status
+
+# Reset status of this service
+rc_reset
+
+# Return values acc. to LSB for all commands but status:
+# 0	  - success
+# 1       - generic or unspecified error
+# 2       - invalid or excess argument(s)
+# 3       - unimplemented feature (e.g. "reload")
+# 4       - user had insufficient privileges
+# 5       - program is not installed
+# 6       - program is not configured
+# 7       - program is not running
+# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
+# 
+# Note that starting an already running service, stopping
+# or restarting a not-running service as well as the restart
+# with force-reload (in case signaling is not supported) are
+# considered a success.
+
+case "$1" in
+    start)
+    	generate_ssl_cert || {
+    		rc_failed
+    		rc_status -v
+    		rc_exit
+    	}
+	echo -n "Starting hawk "
+	## Start daemon with startproc(8). If this fails
+	## the return value is set appropriately by startproc.
+	/sbin/startproc -p $PID_FILE $LIGHTTPD_BIN -f $LIGHTTPD_CONFIG
+
+	# Remember status and be verbose
+	rc_status -v
+	;;
+    stop)
+	echo -n "Shutting down hawk "
+	## Stop daemon with killproc(8) and if this fails
+	## killproc sets the return value according to LSB.
+
+	/sbin/killproc -TERM -p $PID_FILE $LIGHTTPD_BIN
+
+	# Remember status and be verbose
+	rc_status -v
+	;;
+    try-restart|condrestart)
+	## Do a restart only if the service was active before.
+	## Note: try-restart is now part of LSB (as of 1.9).
+	## RH has a similar command named condrestart.
+	if test "$1" = "condrestart"; then
+		echo "${attn} Use try-restart ${done}(LSB)${attn} rather than condrestart ${warn}(RH)${norm}"
+	fi
+	$0 status
+	if test $? = 0; then
+		$0 restart
+	else
+		rc_reset	# Not running is not a failure.
+	fi
+	# Remember status and be quiet
+	rc_status
+	;;
+    restart)
+	## Stop the service and regardless of whether it was
+	## running or not, start it again.
+	$0 stop
+	$0 start
+
+	# Remember status and be quiet
+	rc_status
+	;;
+    force-reload)
+	## Signal the daemon to reload its config. Most daemons
+	## do this on signal 1 (SIGHUP).
+	echo -n "Reload service hawk "
+	killproc -HUP -p $PID_FILE $LIGHTTPD_BIN
+	rc_status -v
+	;;
+    reload)
+	## Like force-reload, but if daemon does not support
+	## signaling, do nothing (!)
+	echo -n "Reload service hawk "
+	killproc -HUP -p $PID_FILE $LIGHTTPD_BIN
+	rc_status -v	
+	;;
+    status)
+	echo -n "Checking for service hawk "
+	## Check status with checkproc(8), if process is running
+	## checkproc will return with exit status 0.
+
+	# Return value is slightly different for the status command:
+	# 0 - service up and running
+	# 1 - service dead, but /var/run/  pid  file exists
+	# 2 - service dead, but /var/lock/ lock file exists
+	# 3 - service not running (unused)
+	# 4 - service status unknown :-(
+	# 5--199 reserved (5--99 LSB, 100--149 distro, 150--199 appl.)
+	
+	# NOTE: checkproc returns LSB compliant status values.
+	/sbin/checkproc -p $PID_FILE $LIGHTTPD_BIN
+	# NOTE: rc_status knows that we called this init script with
+	# "status" option and adapts its messages accordingly.
+	rc_status -v
+	;;
+    *)
+	echo "Usage: $0 {start|stop|status|try-restart|restart|force-reload|reload|probe}"
+	exit 1
+	;;
+esac
+rc_exit
+
